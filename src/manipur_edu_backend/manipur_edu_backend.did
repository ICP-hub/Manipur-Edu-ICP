type CanisterChange = record {
  timestamp_nanos : nat64;
  canister_version : nat64;
  origin : CanisterChangeOrigin;
  details : CanisterChangeDetails;
};
type CanisterChangeDetails = variant {
  creation : CreationRecord;
  code_deployment : CodeDeploymentRecord;
  controllers_change : CreationRecord;
  code_uninstall;
};
type CanisterChangeOrigin = variant {
  from_user : FromUserRecord;
  from_canister : FromCanisterRecord;
};
type CanisterIdRecord = record { canister_id : principal };
type CanisterInfoRequest = record {
  canister_id : principal;
  num_requested_changes : opt nat64;
};
type CanisterInfoResponse = record {
  controllers : vec principal;
  module_hash : opt blob;
  recent_changes : vec CanisterChange;
  total_num_changes : nat64;
};
type CanisterInstallMode = variant {
  reinstall;
  upgrade : opt opt bool;
  install;
};
type CanisterSettings = record {
  freezing_threshold : opt nat;
  controllers : opt vec principal;
  reserved_cycles_limit : opt nat;
  memory_allocation : opt nat;
  compute_allocation : opt nat;
};
type CanisterStatusResponse = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  query_stats : QueryStats;
  idle_cycles_burned_per_day : nat;
  module_hash : opt blob;
  reserved_cycles : nat;
};
type CanisterStatusType = variant { stopped; stopping; running };
type CertificateData = record {
  issued_by : text;
  issue_date : text;
  certificate_info : text;
  certificate_link : blob;
  certificate_id : text;
};
type CodeDeploymentMode = variant { reinstall; upgrade; install };
type CodeDeploymentRecord = record {
  mode : CodeDeploymentMode;
  module_hash : blob;
};
type CreateCanisterArgument = record { settings : opt CanisterSettings };
type CreationRecord = record { controllers : vec principal };
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  reserved_cycles_limit : nat;
  memory_allocation : nat;
  compute_allocation : nat;
};
type FromCanisterRecord = record {
  canister_version : opt nat64;
  canister_id : principal;
};
type FromUserRecord = record { user_id : principal };
type Image = record { chunk_id : nat32; image_id : nat32; num_chunks : nat64 };
type InstallCodeArgument = record {
  arg : blob;
  wasm_module : blob;
  mode : CanisterInstallMode;
  canister_id : principal;
};
type InstituteData = record {
  status : opt text;
  zip_code : opt nat32;
  public_key : opt text;
  coed_status : opt text;
  city : opt text;
  email : opt text;
  website : opt text;
  institute_id : opt text;
  state : opt text;
  institute_name : opt text;
  institute_size : opt nat32;
  institute_type : opt text;
  address : opt text;
  approval_authority : opt text;
  phone_no : opt text;
};
type InstituteInfo = record { public_key : text; name : text };
type QueryStats = record {
  response_payload_bytes_total : nat;
  num_instructions_total : nat;
  num_calls_total : nat;
  request_payload_bytes_total : nat;
};
type RejectionCode = variant {
  NoError;
  CanisterError;
  SysTransient;
  DestinationInvalid;
  Unknown;
  SysFatal;
  CanisterReject;
};
type Result = variant { Ok; Err : text };
type Result_1 = variant {
  Ok : record { CanisterInfoResponse };
  Err : record { RejectionCode; text };
};
type Result_2 = variant {
  Ok : record { CanisterStatusResponse };
  Err : record { RejectionCode; text };
};
type Result_3 = variant { Ok : principal; Err : text };
type Result_4 = variant {
  Ok : record { CanisterIdRecord };
  Err : record { RejectionCode; text };
};
type Result_5 = variant { Ok : text; Err : text };
type Result_6 = variant { Ok; Err : record { RejectionCode; text } };
type Result_7 = variant { Ok : vec CertificateData; Err : text };
type Result_8 = variant { Ok : vec UserResult; Err : text };
type Result_9 = variant {
  Ok : record { blob };
  Err : record { RejectionCode; text };
};
type ScholarShip = record {
  status : text;
  date : text;
  name : text;
  education : text;
  description : text;
  deadline : text;
  scholarship_id : opt text;
  gender : text;
  offerby : text;
  amount : text;
  applicants : vec principal;
};
type UpdateSettingsArgument = record {
  canister_id : principal;
  settings : CanisterSettings;
};
type UserData = record {
  kyc : vec Image;
  status : opt text;
  result : opt vec text;
  mother_name : opt text;
  zip_code : opt nat32;
  public_key : opt text;
  cgpa : opt float32;
  city : opt text;
  roll_no : opt text;
  student_id : opt text;
  student_institute_email : opt text;
  program_enrolled : opt text;
  personal_email : opt text;
  state : opt text;
  institute_name : opt text;
  graduation_year : opt nat16;
  aadhar_no : opt text;
  address : opt text;
  gender : opt text;
  first_name : opt text;
  last_name : opt text;
  certificates : opt vec text;
  date_of_birth : opt text;
  phone_no : opt text;
  father_name : opt text;
};
type UserResult = record {
  result : blob;
  issued_by : text;
  semester : text;
  result_id : text;
  issued_date : text;
  canisterid : opt principal;
};
service : {
  add_private_key : (text) -> (Result);
  approve_institute_profile_update : (text) -> (text);
  approve_student_profile_update : (text) -> (text);
  calculate_state_size : () -> (nat64) query;
  canister_info : (CanisterInfoRequest) -> (Result_1);
  canister_status : (CanisterIdRecord) -> (Result_2);
  check_admin : () -> (bool) query;
  check_canister : (CanisterIdRecord) -> (Result_3);
  check_user_type : () -> (text) query;
  checkk_admin : () -> (bool) query;
  create_canister : (CreateCanisterArgument) -> (Result_4);
  create_scholarship : (ScholarShip) -> (Result_5);
  create_user_certificate : (text, CertificateData) -> (Result_5);
  create_user_result : (text, UserResult) -> (Result_5);
  delete_canister : (CanisterIdRecord) -> (Result_6);
  delete_institute_record : (text) -> (text);
  delete_student_record : (text) -> (text);
  deposit_cycles : (CanisterIdRecord, nat) -> (Result_6);
  edit_institute_profile : (InstituteData) -> (text);
  edit_student_profile : (UserData) -> (text);
  get_admin : () -> (text) query;
  get_all_institute_edit_req : () -> (vec text) query;
  get_all_institute_students : () -> (text) query;
  get_all_scholarship : () -> (vec record { text; ScholarShip }) query;
  get_all_students_edit_req : (opt text) -> (
      vec record { text; UserData },
    ) query;
  get_allinstitute_students_page : (nat32, nat32) -> (vec text) query;
  get_institute_details : (opt text) -> (opt InstituteData) query;
  get_institute_profile_updated : (text) -> (opt InstituteData) query;
  get_institute_students : () -> (opt vec text) query;
  get_institute_students_by_id : (text) -> (opt vec text) query;
  get_institutes : () -> (vec record { text; InstituteData }) query;
  get_institutes_name_and_public_key : () -> (vec InstituteInfo) query;
  get_institutes_page : (nat32, nat32) -> (
      vec record { text; InstituteData },
    ) query;
  get_private_key : () -> (Result_5) query;
  get_scholarship : (text) -> (ScholarShip) query;
  get_student_details : (text) -> (opt UserData) query;
  get_student_profile_updated : (text) -> (opt UserData) query;
  get_students : () -> (text) query;
  get_students_withdetails : () -> (vec record { text; UserData }) query;
  get_students_withdetails_page : (nat32, nat32) -> (
      vec record { text; UserData },
    ) query;
  get_unverified_institutes : () -> (vec text) query;
  get_unverified_students : (opt text) -> (vec text) query;
  get_user_certificates : (text) -> (Result_7) query;
  get_user_result : (text) -> (Result_8) query;
  greet : () -> (text) query;
  install_code : (InstallCodeArgument) -> (Result_6);
  institute_application_status : (text) -> (opt text) query;
  is_user_already_registered : () -> (bool) query;
  login : (text) -> (bool) query;
  raw_rand : () -> (Result_9);
  register_admin : () -> (text);
  register_institute : (InstituteData) -> (text);
  register_user : (UserData) -> (text);
  reject_institute : (text) -> (text);
  reject_student : (text) -> (text);
  start_canister : (CanisterIdRecord) -> (Result_6);
  stop_canister : (CanisterIdRecord) -> (Result_6);
  student_application_status : (text) -> (opt text) query;
  uninstall_code : (CanisterIdRecord) -> (Result_6);
  update_settings : (UpdateSettingsArgument) -> (Result_6);
  verify_institute : (text) -> (text);
  verify_student : (text) -> (text);
}
